// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "edDataText.h"

#include <dtkCore/dtkAbstractDataFactory.h>

// /////////////////////////////////////////////////////////////////
// edDataTextPrivate
// /////////////////////////////////////////////////////////////////

class edDataTextPrivate
{
public:
    QString text;
};

// /////////////////////////////////////////////////////////////////
// edDataText
// /////////////////////////////////////////////////////////////////

edDataText::edDataText(void) : dtkAbstractData(), d(new edDataTextPrivate)
{
    d->text = "Hello dtk world";
}

edDataText::~edDataText(void)
{

}

bool edDataText::registered(void)
{
    return dtkAbstractDataFactory::instance()->registerDataType("edDataText", createEdDataText);
}

QString edDataText::description(void) const
{
    return "edDataText";
}

void *edDataText::data(void)
{
    return static_cast<void*>( &d->text );
}

void edDataText::update(void)
{
   qDebug() << __PRETTY_FUNCTION__ << "\n";
}


void edDataText::setData(void* i_newData)
{
    d->text = *( static_cast<QString*>( i_newData ) );
}

// /////////////////////////////////////////////////////////////////
// Type instanciation
// /////////////////////////////////////////////////////////////////

dtkAbstractData *createEdDataText(void)
{
    return new edDataText;
}
